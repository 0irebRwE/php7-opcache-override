#!/usr/bin/env python

# Copyright (c) 2016 GoSecure Inc.

from opcache_disassembler import OPcacheDisassembler
import sys
import os
import subprocess
import shutil

hunt_source_files = "hunt_source_files.tmp"
hunt_ini          = "hunt.ini.tmp"
hunt_opcache      = "hunt_opcache"

def list_opcache_files(path):
    """ List every opcache (.php.bin) file found in a given path """

    opcache_files = []

    # Check if arg[1] is a folder or a file
    if os.path.isdir(path):

        # Iterate through all the files of the folder
        for subdir, dirs, files in os.walk(path):
            for file in files:

                # Only check .php.bin files
                if file.endswith(".php.bin"):
                    file = os.path.join(subdir, file)
                    opcache_files += [file]

    else:
        # Only check .php.bin files
        if path.endswith(".php.bin"):
          opcache_files += [path]

    return opcache_files

def dump_source_file_list(list):

    with open(hunt_source_files, 'w') as f:
        for file in list:
            f.write(file + "\n")

def setup_env(phpini_path):

    # hunt.ini
    with open(phpini_path, "r") as f:
        with open(hunt_ini, "w") as h:
            for line in f.readlines():

                # opcache.file_cache
                if "opcache.file_cache=" in line:
                    line = "opcache.file_cache=" + os.path.join(os.getcwd(), hunt_opcache)

                # opcache.enable_cli
                if "opcache.enable_cli=" in line:
                    line = "opcache.enable_cli=1"

                # opcache.enable_cli
                if "opcache.enable=" in line:
                    line = "opcache.enable=1"

                h.write(line)

    # cache folder location
    os.mkdir(hunt_opcache)
    os.chmod(hunt_opcache, 0o777)

def cleanup():

    # Remove cache folder
    try:
        shutil.rmtree(hunt_opcache)
    except:
        pass

    # Remove hunt.ini
    try:
        os.remove(hunt_ini)
    except:
        pass

    # Remove source files list
    try:
        os.remove(hunt_source_files)
    except:
        pass

def compile_source_files():
    command = "php -c {0} compile.php {1}".format(hunt_ini, hunt_source_files)
    subprocess.call(command.split(), shell=False)

def show_help():
    """ Show the help menu"""

    print "Usage : {0} [opcache_folder] [system_id] [php.ini] ".format(sys.argv[0])

if __name__ == "__main__":

    if len(sys.argv) < 3:
        show_help()
        exit(0)

    # Remove temporary files and folders
    cleanup()

    # Paths to analyse
    opcache_folder = sys.argv[1]
    system_id = sys.argv[2]
    phpini_path = sys.argv[3]

    # Setup a new phpini for compilation
    setup_env(phpini_path)

    # OPcache file list
    opcache_files = list_opcache_files(opcache_folder)

    # Get location of source folder
    prefix = os.path.commonprefix(opcache_files)
    source_folder = prefix.split(system_id, 1)[1]

    # Source files list
    source_files = [source_folder + file.split(source_folder, 1)[1][:-4] for file in opcache_files ]

    # Dump source files
    dump_source_file_list(source_files)

    # Compile source files
    compile_source_files()

    # Remove temporary files and folders
    cleanup()
